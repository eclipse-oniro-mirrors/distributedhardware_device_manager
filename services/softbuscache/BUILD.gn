# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
} else {
  import("//build/ohos.gni")
}
import("//foundation/distributedhardware/device_manager/device_manager.gni")
if (defined(ohos_lite)) {
  if (ohos_kernel_type == "linux") {
    shared_library("dmdevicecache") {
      include_dirs = [
        "include",
        "${common_path}/include",
        "${innerkits_path}/native_cpp/include",
        "${utils_path}/include/crypto",
        "${json_path}/include",
      ]

      sources = [
        "${common_path}/src/dm_anonymous.cpp",
        "src/dm_softbus_cache.cpp",
      ]

      defines = [
        "LITE_DEVICE",
        "DH_LOG_TAG=\"dmdevicecache\"",
        "LOG_DOMAIN=0xD004113",
      ]

      deps = [
        "${dsoftbussdk_path}:softbus_client",
        "${hilog_path}:hilog_shared",
        "${json_path}:devicemanagerjson",
        "${third_path}:libsec_shared",
        "${utils_path}:devicemanagerutils",
      ]
    }
  }
} else {
  ohos_shared_library("dmdevicecache") {
    sanitize = {
      boundary_sanitize = true
      cfi = true
      cfi_cross_dso = true
      debug = false
      integer_overflow = true
      ubsan = true
    }

    cflags = [
      "-Werror",
      "-fPIC",
      "-fstack-protector-strong",
    ]

    ldflags = [
      "-Wl,-z,relro",
      "-Wl,-z,now",
    ]

    include_dirs = [
      "include",
      "${common_path}/include",
      "${utils_path}/include/crypto",
    ]

    sources = [ "src/dm_softbus_cache.cpp" ]

    defines = [
      "HI_LOG_ENABLE",
      "DH_LOG_TAG=\"dmdevicecache\"",
      "LOG_DOMAIN=0xD004113",
    ]

    deps = [
      "${innerkits_path}/native_cpp:devicemanagersdk",
      "${json_path}:devicemanagerjson",
      "${utils_path}:devicemanagerutils",
    ]

    external_deps = [
      "bounds_checking_function:libsec_shared",
      "dsoftbus:softbus_client",
      "ffrt:libffrt",
      "hilog:libhilog",
    ]

    subsystem_name = "distributedhardware"

    part_name = "device_manager"
  }
}
